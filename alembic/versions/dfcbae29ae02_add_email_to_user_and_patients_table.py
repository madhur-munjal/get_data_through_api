"""add email to user and patients table

Revision ID: dfcbae29ae02
Revises: b22739bddbe0
Create Date: 2025-08-02 00:13:06.802985

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'dfcbae29ae02'
down_revision: Union[str, Sequence[str], None] = 'b22739bddbe0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('patients', sa.Column('email', sa.String(length=255), nullable=False))
    op.create_unique_constraint(None, 'patients', ['email'])
    op.add_column('users', sa.Column('email', sa.String(length=255), nullable=False))
    op.alter_column('users', 'password',
               existing_type=mysql.TEXT(),
               nullable=False)
    op.create_unique_constraint(None, 'users', ['email'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'password',
               existing_type=mysql.TEXT(),
               nullable=True)
    op.drop_column('users', 'email')
    op.drop_constraint(None, 'patients', type_='unique')
    op.drop_column('patients', 'email')
    # ### end Alembic commands ###
